name: deploy-frontend-eks.yml

on:
  push:
    branches:
      - main  # main 브랜치에 push될 때 실행

jobs:
  frontend-a:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v2

      # 2. 디렉토리 구조 확인 (디버깅)
      - name: Check directory structure
        run: |
          ls -la  # 현재 디렉토리의 구조 확인

      # 2. Node.js 및 NPM 설치
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # 원하는 Node.js 버전으로 설정

      # 3. 의존성 설치 및 빌드
      - name: Install dependencies and build
        run: |
          cd frontend  # cicdtest4/ 디렉토리 안에 있는 frontend로 이동
          npm install  # 의존성 설치
          npm run build  # 빌드 실행

      # 4. Docker 이미지 빌드
      - name: Build Docker Image
        run: |
          cd cicdtest4/frontend  # 정확한 경로로 이동
          docker build -t ckdgkim/frontendproject:front-1 .  # Docker 이미지 빌드

      # 5. Docker Hub에 푸시
      - name: Push Docker Image to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
          docker push ckdgkim/frontendproject:front-1  # Docker Hub에 푸시

      # 6. AWS CLI 설정
      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2  # AWS 리전 설정

      # 7. kubectl 설치
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      # 8. EKS kubeconfig 업데이트
      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region ap-northeast-2 --name mycluster  # EKS 클러스터 이름 업데이트

      # 9. Kubernetes 배포 적용
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f cicdtest4/frontend/frontend-eks.yml  # Kubernetes 배포 파일 적용

      # 10. 배포 상태 확인
      - name: Check Deployment Status
        run: |
          kubectl rollout status deployment/frontend-deployment  # 배포 상태 확인

